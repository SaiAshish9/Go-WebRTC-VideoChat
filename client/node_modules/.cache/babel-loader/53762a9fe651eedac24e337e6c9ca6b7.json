{"ast":null,"code":"var _jsxFileName = \"/Users/saiashishdarapureddy/Desktop/folders/projects/go-workspace/bin/video-chat/client/src/components/Room.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Room = props => {\n  _s();\n\n  const userVideo = useRef();\n  const userStream = useRef();\n  const partnerVideo = useRef();\n  const peerRef = useRef();\n  const webSocketRef = useRef();\n  const {\n    roomID\n  } = useParams();\n\n  const openCamera = async () => {\n    const allDevices = await navigator.mediaDevices.enumerateDevices();\n    const cameras = allDevices.filter(device => device.kind === \"videoinput\");\n    const constraints = {\n      audio: true,\n      video: {\n        deviceId: cameras[0].deviceId\n      }\n    };\n\n    try {\n      return await navigator.mediaDevices.getUserMedia(constraints);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    openCamera().then(stream => {\n      userVideo.current.srcObject = stream;\n      userStream.current = stream;\n      webSocketRef.current = new WebSocket(`ws://localhost:8000/join?roomID=${roomID}`);\n      webSocketRef.current.addEventListener(\"open\", () => {\n        webSocketRef.current.send(JSON.stringify({\n          join: true\n        }));\n      });\n      webSocketRef.current.addEventListener(\"message\", async e => {\n        const message = JSON.parse(e.data);\n\n        if (message.join) {\n          callUser();\n        }\n\n        if (message.offer) {\n          handleOffer(message.offer);\n        }\n\n        if (message.answer) {\n          console.log(\"Receiving Answer\");\n          peerRef.current.setRemoteDescription(new RTCSessionDescription(message.answer));\n        }\n\n        if (message.iceCandidate) {\n          console.log(\"Receiving and Adding ICE Candidate\");\n\n          try {\n            await peerRef.current.addIceCandidate(message.iceCandidate);\n          } catch (err) {\n            console.log(\"Error Receiving ICE Candidate\", err);\n          }\n        }\n      });\n    });\n  });\n\n  const handleOffer = async offer => {\n    console.log(\"Received Offer, Creating Answer\");\n    peerRef.current = createPeer();\n    await peerRef.current.setRemoteDescription(new RTCSessionDescription(offer));\n    userStream.current.getTracks().forEach(track => {\n      peerRef.current.addTrack(track, userStream.current);\n    });\n    const answer = await peerRef.current.createAnswer();\n    await peerRef.current.setLocalDescription(answer);\n    webSocketRef.current.send(JSON.stringify({\n      answer: peerRef.current.localDescription\n    }));\n  };\n\n  const callUser = () => {\n    console.log(\"Calling Other User\");\n    peerRef.current = createPeer();\n    userStream.current.getTracks().forEach(track => {\n      peerRef.current.addTrack(track, userStream.current);\n    });\n  };\n\n  const createPeer = () => {\n    console.log(\"Creating Peer Connection\");\n    const peer = new RTCPeerConnection({\n      iceServers: [{\n        urls: \"stun:stun.l.google.com:19302\"\n      }]\n    });\n    peer.onnegotiationneeded = handleNegotiationNeeded;\n    peer.onicecandidate = handleIceCandidateEvent;\n    peer.ontrack = handleTrackEvent;\n    return peer;\n  };\n\n  const handleNegotiationNeeded = async () => {\n    console.log(\"Creating Offer\");\n\n    try {\n      const myOffer = await peerRef.current.createOffer();\n      await peerRef.current.setLocalDescription(myOffer);\n      webSocketRef.current.send(JSON.stringify({\n        offer: peerRef.current.localDescription\n      }));\n    } catch (err) {}\n  };\n\n  const handleIceCandidateEvent = e => {\n    console.log(\"Found Ice Candidate\");\n\n    if (e.candidate) {\n      console.log(e.candidate);\n      webSocketRef.current.send(JSON.stringify({\n        iceCandidate: e.candidate\n      }));\n    }\n  };\n\n  const handleTrackEvent = e => {\n    console.log(\"Received Tracks\");\n    partnerVideo.current.srcObject = e.streams[0];\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      autoPlay: true,\n      controls: true,\n      ref: userVideo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      autoPlay: true,\n      controls: true,\n      ref: partnerVideo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Room, \"0u8AwWuTw+W3qmCBbTm3T4lRtzs=\", false, function () {\n  return [useParams];\n});\n\n_c = Room;\nexport default Room;\n\nvar _c;\n\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"sources":["/Users/saiashishdarapureddy/Desktop/folders/projects/go-workspace/bin/video-chat/client/src/components/Room.js"],"names":["React","useEffect","useRef","useParams","Room","props","userVideo","userStream","partnerVideo","peerRef","webSocketRef","roomID","openCamera","allDevices","navigator","mediaDevices","enumerateDevices","cameras","filter","device","kind","constraints","audio","video","deviceId","getUserMedia","err","console","log","then","stream","current","srcObject","WebSocket","addEventListener","send","JSON","stringify","join","e","message","parse","data","callUser","offer","handleOffer","answer","setRemoteDescription","RTCSessionDescription","iceCandidate","addIceCandidate","createPeer","getTracks","forEach","track","addTrack","createAnswer","setLocalDescription","localDescription","peer","RTCPeerConnection","iceServers","urls","onnegotiationneeded","handleNegotiationNeeded","onicecandidate","handleIceCandidateEvent","ontrack","handleTrackEvent","myOffer","createOffer","candidate","streams"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nconst Room = (props) => {\n  const userVideo = useRef();\n  const userStream = useRef();\n  const partnerVideo = useRef();\n  const peerRef = useRef();\n  const webSocketRef = useRef();\n\n  const { roomID } = useParams();\n\n  const openCamera = async () => {\n    const allDevices = await navigator.mediaDevices.enumerateDevices();\n    const cameras = allDevices.filter((device) => device.kind === \"videoinput\");\n\n    const constraints = {\n      audio: true,\n      video: {\n        deviceId: cameras[0].deviceId,\n      },\n    };\n\n    try {\n      return await navigator.mediaDevices.getUserMedia(constraints);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    openCamera().then((stream) => {\n      userVideo.current.srcObject = stream;\n      userStream.current = stream;\n\n      webSocketRef.current = new WebSocket(\n        `ws://localhost:8000/join?roomID=${roomID}`\n      );\n\n      webSocketRef.current.addEventListener(\"open\", () => {\n        webSocketRef.current.send(JSON.stringify({ join: true }));\n      });\n\n      webSocketRef.current.addEventListener(\"message\", async (e) => {\n        const message = JSON.parse(e.data);\n\n        if (message.join) {\n          callUser();\n        }\n\n        if (message.offer) {\n          handleOffer(message.offer);\n        }\n\n        if (message.answer) {\n          console.log(\"Receiving Answer\");\n          peerRef.current.setRemoteDescription(\n            new RTCSessionDescription(message.answer)\n          );\n        }\n\n        if (message.iceCandidate) {\n          console.log(\"Receiving and Adding ICE Candidate\");\n          try {\n            await peerRef.current.addIceCandidate(message.iceCandidate);\n          } catch (err) {\n            console.log(\"Error Receiving ICE Candidate\", err);\n          }\n        }\n      });\n    });\n  });\n\n  const handleOffer = async (offer) => {\n    console.log(\"Received Offer, Creating Answer\");\n    peerRef.current = createPeer();\n\n    await peerRef.current.setRemoteDescription(\n      new RTCSessionDescription(offer)\n    );\n\n    userStream.current.getTracks().forEach((track) => {\n      peerRef.current.addTrack(track, userStream.current);\n    });\n\n    const answer = await peerRef.current.createAnswer();\n    await peerRef.current.setLocalDescription(answer);\n\n    webSocketRef.current.send(\n      JSON.stringify({ answer: peerRef.current.localDescription })\n    );\n  };\n\n  const callUser = () => {\n    console.log(\"Calling Other User\");\n    peerRef.current = createPeer();\n\n    userStream.current.getTracks().forEach((track) => {\n      peerRef.current.addTrack(track, userStream.current);\n    });\n  };\n\n  const createPeer = () => {\n    console.log(\"Creating Peer Connection\");\n    const peer = new RTCPeerConnection({\n      iceServers: [{ urls: \"stun:stun.l.google.com:19302\" }],\n    });\n\n    peer.onnegotiationneeded = handleNegotiationNeeded;\n    peer.onicecandidate = handleIceCandidateEvent;\n    peer.ontrack = handleTrackEvent;\n\n    return peer;\n  };\n\n  const handleNegotiationNeeded = async () => {\n    console.log(\"Creating Offer\");\n\n    try {\n      const myOffer = await peerRef.current.createOffer();\n      await peerRef.current.setLocalDescription(myOffer);\n\n      webSocketRef.current.send(\n        JSON.stringify({ offer: peerRef.current.localDescription })\n      );\n    } catch (err) {}\n  };\n\n  const handleIceCandidateEvent = (e) => {\n    console.log(\"Found Ice Candidate\");\n    if (e.candidate) {\n      console.log(e.candidate);\n      webSocketRef.current.send(JSON.stringify({ iceCandidate: e.candidate }));\n    }\n  };\n\n  const handleTrackEvent = (e) => {\n    console.log(\"Received Tracks\");\n    partnerVideo.current.srcObject = e.streams[0];\n  };\n\n  return (\n    <div>\n      <video autoPlay controls={true} ref={userVideo}></video>\n      <video autoPlay controls={true} ref={partnerVideo}></video>\n    </div>\n  );\n};\n\nexport default Room;\n"]},"metadata":{},"sourceType":"module"}